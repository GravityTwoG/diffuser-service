proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=STATIC:10m inactive=7d use_temp_path=off;

upstream vitejs_upstream {
  server host.docker.internal:5173;
  keepalive 8;
  # We could add additional servers here for load-balancing
}

upstream nestjs_upstream {
  server host.docker.internal:3000;
  keepalive 8;
}

upstream minio_upstream {
  server host.docker.internal:10000;
  keepalive 8;
}

server {
  listen 8080;
  listen [::]:8080;

  gzip on;
  gzip_proxied any;
  gzip_comp_level 4;
  gzip_vary off;
  gzip_min_length 1000;
  gzip_buffers 16 8k;
  gzip_http_version 1.1;
  gzip_disable "msie6";
  gzip_types
    application/atom+xml
    application/javascript
    application/json
    application/ld+json
    application/manifest+json
    application/rss+xml
    application/vnd.geo+json
    application/vnd.ms-fontobject
    application/x-font-ttf
    application/x-web-app-manifest+json
    application/xhtml+xml
    application/xml
    font/opentype
    image/bmp
    image/svg+xml
    image/x-icon
    text/cache-manifest
    text/css
    text/plain
    text/vcard
    text/vnd.rim.location.xloc
    text/vtt
    text/x-component
    text/x-cross-domain-policy;

  proxy_set_header Upgrade $http_upgrade;
  proxy_set_header Connection 'upgrade';
  proxy_set_header Host $host;
  proxy_set_header X-Real-IP           $remote_addr;
  proxy_set_header X-Forwarded-For     $proxy_add_x_forwarded_for;
  proxy_set_header X-Forwarded-Proto   $scheme;
  proxy_set_header X-Forwarded-Host    $host;
  proxy_set_header X-Forwarded-Port    $server_port;
  proxy_cache_bypass $http_upgrade;

  add_header X-Frame-Options SAMEORIGIN;
  add_header X-Content-Type-Options nosniff;
  add_header X-XSS-Protection "1; mode=block";

  location / {
    proxy_pass http://vitejs_upstream;
  }

  location /api/ {
    proxy_pass http://nestjs_upstream/;
  }

  ignore_invalid_headers off;
  location /s3/ {
    client_max_body_size 0;
    proxy_buffering off;
    chunked_transfer_encoding off;
    proxy_pass http://minio_upstream/;
  }
}